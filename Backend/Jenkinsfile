pipeline {
  agent {
    label 'AGENT-1'
  }
  options {
    timeout(time: 5, unit: 'MINUTES')
    disableConcurrentBuilds()
  }
  parameters {
    choice(name: 'ENVIRONMENT', choices: ['dev', 'qa', 'uat', 'pre-prod', 'prod'], description: 'Select your environment') 
    booleanParam(name: 'deploy', defaultValue: false, description: 'select to deploy or not')
  }
  environment {
    DEBUG = 'true'
    region = 'us-east-1'
    account_id = '688567303455'
    project = 'expense'
    env_name = ''
    component = 'backend'
  }

  stages{
    stage('debug') {
      steps {
        echo 'debugging..'
        sh 'env'
      }
    }

    stage('Read The Version') {
      steps {
        script {
          // Read the version from package.json
          // Store it in a Jenkins environment variable (env.appVersion) so it is available globally
          // across all stages (Docker build, Deploy, etc.), not just inside this script block
          def packageJson = readJSON file: 'Backend/package.json'
          env.appVersion = packageJson.version
          echo "App version: ${env.appVersion}"
        }
      }
    }

    stage('Initialize Environment') {
      steps {
        script {
          // Copy the selected Jenkins parameter (ENVIRONMENT) into a global environment variable (env_name)
         // This allows us to use the selected environment in all stages (Docker build, deploy, etc.)
          env.env_name = params.ENVIRONMENT
          echo "Selected environment: ${env.env_name}"
        }
      }
    }

    stage('install dependencies'){
      steps {
        dir('Backend') {
          sh 'npm install'
        }
      }
    }

    stage('Docker Build'){
      steps {
        withAWS(region: 'us-east-1', credentials: 'aws-creds'){
          dir('Backend'){
            sh """
              aws ecr get-login-password --region ${region} | docker login --username AWS --password-stdin ${account_id}.dkr.ecr.us-east-1.amazonaws.com
           
              docker build -t ${account_id}.dkr.ecr.us-east-1.amazonaws.com/${project}/${env.env_name}/${component}:${env.appVersion} .
 
              docker images
 
              docker push ${account_id}.dkr.ecr.us-east-1.amazonaws.com/${project}/${env.env_name}/${component}:${env.appVersion}
            """
          }
        }
      }
    }
    stage('Deploy'){
      when {
        expression { params.deploy }
      }
      steps {
        build job: 'Backend-cd', parameters: [string(name: 'version', value: "${env.appVersion}"),string(name: 'ENVIRONMENT', value: "${env.env_name}")], wait: true      
      }
    }
  }
  post {
    always {
      echo 'This section always runs!'
      deleteDir() //in jenkins this function will delete the workspace directory of the job on the agent (VM/container)
    }
    success {
      echo 'This section runs when pipeline sucess'
    }
    failure {
      echo 'This section runs when pipeline failed' 
    }
  }
}